% !Mode:: "TeX:UTF-8"

@article{NUNEZVARELA2017164,
title = {Source code metrics: A systematic mapping study},
journal = {Journal of Systems and Software},
volume = {128},
pages = {164-197},
year = {2017},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2017.03.044},
url = {https://www.sciencedirect.com/science/article/pii/S0164121217300663},
author = {Alberto S. Nuñez-Varela and Héctor G. Pérez-Gonzalez and Francisco E. Martínez-Perez and Carlos Soubervielle-Montalvo},
keywords = {Source code metrics, Software metrics, Object-oriented metrics, Aspect-oriented metrics, Feature-oriented metrics, Systematic mapping study},
abstract = {Context
Source code metrics are essential components in the software measurement process. They are extracted from the source code of the software, and their values allow us to reach conclusions about the quality attributes measured by the metrics.
Objectives
This paper aims to collect source code metrics related studies, review them, and perform an analysis, while providing an overview on the current state of source code metrics and their current trends.
Method
A systematic mapping study was conducted. A total of 226 studies, published between the years 2010 and 2015, were selected and analyzed.
Results
Almost 300 source code metrics were found. Object oriented programming is the most commonly studied paradigm with the Chidamber and Kemerer metrics, lines of code, McCabe's cyclomatic complexity, and number of methods and attributes being the most used metrics. Research on aspect and feature oriented programming is growing, especially for the current interest in programming concerns and software product lines.
Conclusions
Object oriented metrics have gained much attention, but there is a current need for more studies on aspect and feature oriented metrics. Software fault prediction, complexity and quality assessment are recurrent topics, while concerns, big scale software and software product lines represent current trends.}
}

@article{Ardito2020,
  title={A Tool-Based Perspective on Software Code Maintainability Metrics: A Systematic Literature Review},
  author={ Ardito, Luca  and  Coppola, Riccardo  and  Barbato, Luca  and  Verga, Diego },
  journal={Scientific Programming},
  number={8840389},
  year={2020},
}

@article{QU2015193,
title = {Exploring community structure of software Call Graph and its applications in class cohesion measurement},
journal = {Journal of Systems and Software},
volume = {108},
pages = {193-210},
year = {2015},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2015.06.015},
url = {https://www.sciencedirect.com/science/article/pii/S0164121215001259},
author = {Yu Qu and Xiaohong Guan and Qinghua Zheng and Ting Liu and Lidan Wang and Yuqiao Hou and Zijiang Yang},
keywords = {Class cohesion metrics, Complex network, Community structure},
abstract = {Many complex networked systems exhibit natural divisions of network nodes. Each division, or community, is a densely connected subgroup. Such community structure not only helps comprehension but also finds wide applications in complex systems. Software networks, e.g., Class Dependency Networks, are such networks with community structures, but their characteristics at the function or method call granularity have not been investigated, which are useful for evaluating and improving software intra-class structure. Moreover, existing proposed applications of software community structure have not been directly compared or combined with existing software engineering practices. Comparison with baseline practices is needed to convince practitioners to adopt the proposed approaches. In this paper, we show that networks formed by software methods and their calls exhibit relatively significant community structures. Based on our findings we propose two new class cohesion metrics to measure the cohesiveness of object-oriented programs. Our experiment on 10 large open-source Java programs validate the existence of community structures and the derived metrics give additional and useful measurement of class cohesion. As an application we show that the new metrics are able to predict software faults more effectively than existing metrics.}
}

@inproceedings{2021BBregLocator,
  title={BBregLocator: A Vulnerability Detection System Based on Bounding Box Regression},
  author={ Tian, Junfeng  and  Zhang, Junkun  and  Liu, Fanming },
  booktitle={2021 51st Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshops (DSN-W)},
  year={2021},
}

@article{Sheneamer2018A,
  title={A detection framework for semantic code clones and obfuscated code},
  author={Sheneamer and Abdullah and Roy and Swarup and Kalita and Jugal},
  journal={Expert Systems with Application},
  year={2018},
}

@inproceedings{2014A,
  title={A Scalable Approach for Vulnerability Discovery Based on Security Patches},
  author={ Li, Hongzhe  and  Kwon, Hyuckmin  and  Kwon, Jonghoon  and  Lee, Heejo },
  booktitle={International Conference on Applications \& Techniques in Information Security},
  year={2014},
}

@article{2012Mitigating,
  title={Mitigating program security vulnerabilities: Approaches and challenges},
  author={ Shahriar, Hossain  and  Zulkernine, Mohammad },
  journal={ACM Computing Surveys},
  volume={44},
  number={3},
  pages={1-46},
  year={2012},
}

@article{2017IDE,
  title={IDE Plugins for Detecting Input-Validation Vulnerabilities},
  author={ Baset, Aniqua Z.  and  Denning, Tamara },
  journal={IEEE},
  year={2017},
}

@inproceedings{2016How,
  title={How to find and fix software vulnerabilities with coverity static analysis},
  author={ Baloglu, Bill },
  booktitle={Cybersecurity Development},
  year={2016},
}

@article{2017Assessment,
  title={Assessment of Vulnerability Severity using Text Mining},
  author={ Spanos, Georgios  and  Angelis, Lefteris  and  Toloudis, Dimitrios },
  journal={ACM},
  pages={1-6},
  year={2017},
}

@article{2018A,
  title={A Multi-Target Approach to Estimate Software Vulnerability Characteristics and Severity Scores},
  author={ Spanos, Georgios  and  Angelis, Lefteris },
  journal={Journal of Systems and Software},
  volume={146},
  number={DEC.},
  pages={152-166},
  year={2018},
}

@article{2020The,
  title={The effect of Bellwether analysis on software vulnerability severity prediction models},
  author={ Kudjo, Patrick Kwaku  and  Chen, Jinfu  and  Mensah, Solomon  and  Amankwah, Richard  and  Kudjo, Christopher },
  journal={Software Quality Journal},
  volume={28},
  number={1},
  pages={1-34},
  year={2020},
}

@article{2015Exploring,
  title={Exploring community structure of software Call Graph and its applications in class cohesion measurement},
  author={ Qu, Yu  and  Guan, Xiaohong  and  Zheng, Qinghua  and  Liu, Ting  and  Wang, Lidan  and  Hou, Yuqiao  and  Yang, Zijiang },
  journal={Journal of Systems \& Software},
  volume={108},
  number={oct.},
  pages={193-210},
  year={2015},
}

@article{2012A,
  title={A Software Quality Evaluation Method Using the Change of Source Code Metrics},
  author={ Nakamura, Mitsuhiro  and  Hamagami, Tomoki },
  journal={IEEE},
  year={2012},
}

@article{2012Framework,
  title={Framework for evaluation and validation of software complexity measures},
  author={ Misra, S  and  Akman, I  and  Colomo-Palacios, R },
  journal={Iet Software},
  volume={6},
  number={4},
  pages={323-334},
  year={2012},
}

@inproceedings{2012Asuite,
  title={A Suite of Cognitive Complexity Metrics},
  author={ Misra, Sanjay  and  Koyuncu, Murat  and  Crasso, Marco  and  Mateos, Cristian  and  Zunino, Alejandro },
  booktitle={International Conference on Computational Science \& Its Applications},
  year={2012},
}

@article{2010Assessing,
  title={Assessing traditional and new metrics for object-oriented systems},
  author={ Concas, Giulio  and  Marchesi, Michele  and  Murgia, Alessandro  and  Pinna, Sandro  and  Tonelli, Roberto },
  journal={ACM},
  year={2010},
}

@article{陈振强2003,
  title={一种基于依赖性分析的类内聚度度量方法},
  author={陈振强 and 徐宝文},
  journal={软件学报},
  volume={14},
  number={11},
  pages={8},
  year={2003},
}

@article{马健2018,
  title={面向对象软件耦合度量方法},
  author={马健 and 刘峰 and 樊建平},
  journal={北京邮电大学学报},
  volume={41},
  number={1},
  pages={6},
  year={2018},
}

@article{1993Object,
  title={Object-oriented metrics that predict maintainability},
  author={ Li, Wei  and  Henry, Sallie },
  journal={Journal of Systems \& Software},
  volume={23},
  number={2},
  pages={111-122},
  year={1993},
}

@book{Arnold1996,
author = {Arnold, Robert S.},
title = {Software Change Impact Analysis},
year = {1996},
isbn = {0818673842},
publisher = {IEEE Computer Society Press},
address = {Washington, DC, USA},
abstract = {From the Publisher:As software systems become increasingly large and complex, the need increases to predict and control the effects of software changes. Software Change Impact Analysis captures the latest information on the science and art of determining what software parts affect each other. It provides a battery of ideas for doing impact analysis better, presents a framework for the field, and focuses attention on important results. You will gain a healthy respect for the strengths and limitations of impact analysis technology and a solid background that will prove valuable for years to come. The book identifies key impact analysis definitions and themes and illustrates the important themes to give you a solid understanding for tackling impact analysis problems. It includes reports on software source code dependency analysis and software traceability analysis and shows how results from both areas can more effectively support impact analysis in software engineering repositories. It also describes why impact representation and determination techniques are at the heart of both source dependency analysis and traceability analysis.}
}

@article{2013Large,
  title={Large-Scale Enterprise Systems: Changes and Impacts},
  author={ Chen, Wen  and  Iqbal, Asif  and  Abdrakhmanov, Akbar  and  Parlar, Jay  and  Wassyng, Alan },
  journal={lecture notes in business information processing},
  year={2013},
}

@inproceedings{2004Efficient,
  title={Efficient forward computation of dynamic slices using reduced ordered binary decision diagrams},
  author={ Zhang, Xiangyu  and  Gupta, R.  and  Zhang, Youtao },
  booktitle={Software Engineering, 2004. ICSE 2004. Proceedings},
  year={2004},
}

@article{1991Using,
  title={Using program slicing in software maintenance},
  author={ Gallagher, K. B  and  Lyle, J. R },
  journal={IEEE Transactions on Software Engineering},
  volume={17},
  number={8},
  pages={751-761},
  year={1991},
}

@article{JitenderKumarChhabra2018Improved,
  title={Improved Computation of Change Impact Analysis in Software Using All Applicable Dependencies},
  author={JitenderKumarChhabra and MrinaalMalhotra and JitenderKumarChhabra and MrinaalMalhotra and JitenderKumarChhabra and MrinaalMalhotra and JitenderKumarChhabra and MrinaalMalhotra and JitenderKumarChhabra and MrinaalMalhotra},
  journal={Springer, Singapore},
  year={2018},
}

@inproceedings{2011An,
  title={An adaptive approach to impact analysis from change requests to source code},
  author={ Gethers, Malcom  and  Kagdi, Huzefa  and  Dit, Bogdan  and  Poshyvanyk, Denys },
  booktitle={IEEE/ACM International Conference on Automated Software Engineering},
  year={2011},
}

@article{2013Analyzing,
  title={Analyzing impact rules of different change types to support change impact analysis},
  author={ Sun, Xiaobing  and  Li, Bixin  and  Wen, Wanzhi  and  Zhang, Sai },
  journal={International Journal of Software Engineering \& Knowledge Engineering},
  volume={23},
  number={03},
  pages={259-288},
  year={2013},
}

@article{Department2013Impact,
  title={Impact analysis in the presence of dependence clusters using Static Execute After in WebKit},
  author={Department and of and Software and Engineering and University and of and Szeged and Szeged and Hungary},
  journal={Journal of Software: Evolution and Process},
  volume={26},
  number={6},
  pages={569-588},
  year={2013},
}

@INPROCEEDINGS{5676283,
  author={Sun, Xiaobing and Li, Bixin and Tao, Chuanqi and Wen, Wanzhi and Zhang, Sai},
  booktitle={2010 IEEE 34th Annual Computer Software and Applications Conference}, 
  title={Change Impact Analysis Based on a Taxonomy of Change Types}, 
  year={2010},
  volume={},
  number={},
  pages={373-382},
  keywords={Java;Taxonomy;Computer numerical control;Delta modulation;Software maintenance;Change impact analysis;initial impact set;impact rules;change types classification;object oriented class and member dependence graph},
  doi={10.1109/COMPSAC.2010.45}}


  
@article{2021Improving,
  title={Improving the Accuracy of Static Source Code Based Software Change Impact Analysis Through Hybrid Techniques: A Review},
  author={ Shakirat, Yusuff  and  Bajeh, Amos  and  Aro, T. O  and  Adewole, Kayode  and  Mathematical, Departmentof },
  journal={Universiti Malaysia Pahang Publishing},
  number={1},
  year={2021},
}

@inproceedings{2007Precise,
  title={Precise Dynamic Impact Analysis with Dependency Analysis for Object-oriented Programs},
  author={ Huang, Lulu  and  Song, Yeong Tae },
  booktitle={Acis International Conference on Software Engineering Research},
  year={2007},
}

@article{2015Acom,
  title={A comprehensive study of the predictive accuracy of dynamic change-impact analysis},
  author={ Cai, Haipeng  and  Santelices, Raul },
  journal={Journal of Systems and Software},
  volume={103},
  pages={248-265},
  year={2015},
}

@inproceedings{2014Estimating,
  title={Estimating the Accuracy of Dynamic Change-Impact Analysis Using Sensitivity Analysis},
  author={ Cai, Haipeng  and  Santelices, Raul  and  Xu, Tianyu },
  booktitle={Eighth International Conference on Software Security \& Reliability},
  year={2014},
}

@inproceedings{2016DistIA,
  title={DistIA: a cost-effective dynamic impact analysis for distributed programs},
  author={ Cai, Haipeng  and  Thain, Douglas },
  booktitle={the 31st IEEE/ACM International Conference},
  year={2016},
}

@article{2016Using,
  title={Using static and dynamic impact analysis for effort estimation},
  author={ Basri, Sufyan  and  Kama, Nazri  and  Adli, Saiful  and  Haneem, Faizura },
  journal={Iet Software},
  volume={10},
  number={4},
  pages={89-95},
  year={2016},
}

@article{Markus2017Supporting,
  title={Supporting Change Impact Analysis Using a Recommendation System: An Industrial Case Study in a Safety-Critical Context},
  author={Markus and Borg and Krzysztof and Wnuk and Björn and Regnell and Per and Runeson},
  journal={IEEE Transactions on Software Engineering},
  year={2017},
}

@inproceedings{2008Mining,
  title={Mining software repositories for software change impact analysis: a case study},
  author={ Hattori, Lile  and  Jr, Gilson Pereira Dos Santos  and  Cardoso, Fernando  and  Sampaio, Marcus Costa },
  booktitle={Brazilian Symposium on Databases},
  year={2008},
}

@inproceedings{2014Impact,
  title={Impact analysis of change requests on source code based on interaction and commit histories},
  author={ Zanjani, Motahareh Bahrami  and  Swartzendruber, George  and  Kagdi, Huzefa },
  booktitle={ACM},
  year={2014},
}

@inproceedings{2016Generalizing,
  title={Generalizing the Analysis of Evolutionary Coupling for Software Change Impact Analysis},
  author={ Rolfsnes, Thomas  and  Alesio, Stefano Di  and  Behjati, Razieh  and  Moonen, Leon  and  Binkley, Dave W },
  booktitle={IEEE International Conference on Software Analysis},
  year={2016},
}

@article{2005Mining,
  title={Mining version histories to guide software changes},
  author={ Zimmermann, T  and  Zeller, A  and  Weissgerber, P  and  Diehl, S },
  journal={IEEE Transactions on Software Engineering},
  year={2005},
}

@article{2021Change,
  title={Change-Patterns Mapping: A Boosting Way for Change Impact Analysis},
  author={ Huang, Yuan  and  Jiang, Jinyu  and  Luo, Xiapu  and  Chen, Xiangping  and  Huang, Gang },
  journal={IEEE Transactions on Software Engineering},
  volume={PP},
  number={99},
  pages={1-1},
  year={2021},
}

@article{2014ImpactMiner,
  title={ImpactMiner: a tool for change impact analysis},
  author={ Dit, Bogdan  and  Wagner, Michael  and  Wen, Shasha  and  Wang, Weilin  and Linares-Vásquez, Mario and  Poshyvanyk, Denys  and  Kagdi, Huzefa },
  journal={ACM},
  pages={540-543},
  year={2014},
}

@inproceedings{2013ClaSP,
  title={Clasp: An efficient algorithm for mining frequent closed sequences},
  author={Gomariz, Antonio and Campos, Manuel and Marin, Roque and Goethals, Bart},
  booktitle={Advances in Knowledge Discovery and Data Mining: 17th Pacific-Asia Conference, PAKDD 2013, Gold Coast, Australia, April 14-17, 2013, Proceedings, Part I 17},
  pages={50--61},
  year={2013},
  organization={Springer}
}

@article{花子涵2024代码审查自动化研究综述,
  title={代码审查自动化研究综述},
  author={花子涵 and 杨立 and 陆俊逸 and 左春},
  journal={软件学报},
  volume={35},
  number={7},
  pages={3265-3290},
  year={2024},
}

@online{G66,
  author    = {Example Author},
  title     = {Example Website},
  year      = {2024},
  url       = {https://www.example.com},
  note      = {访问日期：2024年12月19日}
}

@article{2017Extraction,
  title={Extraction of Microservices from Monolithic Software Architectures},
  author={ Mazlami, Genc  and  Cito, Jurgen  and  Leitner, Philipp },
  journal={IEEE},
  year={2017},
}

@inproceedings{wan-etal-2023-gpt,
    title = "{GPT}-{RE}: In-context Learning for Relation Extraction using Large Language Models",
    author = "Wan, Zhen  and
      Cheng, Fei  and
      Mao, Zhuoyuan  and
      Liu, Qianying  and
      Song, Haiyue  and
      Li, Jiwei  and
      Kurohashi, Sadao",
    editor = "Bouamor, Houda  and
      Pino, Juan  and
      Bali, Kalika",
    booktitle = "Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing",
    month = dec,
    year = "2023",
    address = "Singapore",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2023.emnlp-main.214",
    doi = "10.18653/v1/2023.emnlp-main.214",
    pages = "3534--3547",
    abstract = "In spite of the potential for ground-breaking achievements offered by large language models (LLMs) (e.g., GPT-3) via in-context learning (ICL), they still lag significantly behind fully-supervised baselines (e.g., fine-tuned BERT) in relation extraction (RE). This is due to the two major shortcomings of ICL for RE: (1) low relevance regarding entity and relation in existing sentence-level demonstration retrieval approaches for ICL; and (2) the lack of explaining input-label mappings of demonstrations leading to poor ICL effectiveness. In this paper, we propose GPT-RE to successfully address the aforementioned issues by (1) incorporating task-aware representations in demonstration retrieval; and (2) enriching the demonstrations with gold label-induced reasoning logic. We evaluate GPT-RE on four widely-used RE datasets, and observe that GPT-RE achieves improvements over not only existing GPT-3 baselines, but also fully-supervised baselines as in Figure 1. Specifically, GPT-RE achieves SOTA performances on the Semeval and SciERC datasets, and competitive performances on the TACRED and ACE05 datasets. Additionally, a critical issue of LLMs revealed by previous work, the strong inclination to wrongly classify NULL examples into other pre-defined labels, is substantially alleviated by our method. We show an empirical analysis.",
}

@article{迟曲2011关于软件设计的模块独立性分析,
  title={关于软件设计的模块独立性分析},
  author={迟曲},
  journal={数字技术与应用},
  number={3},
  pages={2},
  year={2011},
}

@article{2012Maintenance,
  title={Maintenance vs. Reengineering Software Systems},
  author={ Kumar, Ashok  and  Gill, Bakhshsish Singh },
  journal={Global Journal of Computer Science \& Technology},
  year={2012},
}

@article{2016Microservices,
  title={Microservices: A Systematic Mapping Study},
  author={ Pahl, Claus  and  Jamshidi, Pooyan },
  journal={SCITEPRESS - Science and Technology Publications, Lda},
  year={2016},
}

@article{2022An,
  title={An improving approach to analyzing change impact of C programs},
  author={ Dai, Peng  and  Wang, Yawen  and  Jin, Dahai  and  Gong, Yunzhan  and  Yang, Wenjin },
  journal={Computer communications},
  number={Jan.},
  pages={182},
  year={2022},
}

@article{2020MLIR,
  title={MLIR: A compiler infrastructure for the end of Moore's law},
  author={Lattner, Chris and Amini, Mehdi and Bondhugula, Uday and Cohen, Albert and Davis, Andy and Pienaar, Jacques and Riddle, River and Shpeisman, Tatiana and Vasilache, Nicolas and Zinenko, Oleksandr},
  journal={arXiv preprint arXiv:2002.11054},
  year={2020}
}
@article{1997Property,
  title={Property-Based Software Engineering Measurement},
  author={ Briand, Lionel C.  and  Morasca, Sandro  and  Basili, Victor R. },
  journal={IEEE Press},
  year={1997},
}


@misc{clang,
  author = {llvm-admin team},
  title = {Clang, a C language family frontend for LLVM.},
  year = {2024},
  url = {https://clang.llvm.org/}
}

@misc{libclang,
  author = {llvm-admin team},
  title = {libclang: C Interface to Clang.},
  year = {2024},
  url = {https://clang.llvm.org/doxygen/group__CINDEX.html}
}

@inproceedings{2014Service,
  title={Service Identification Based on Quality Metrics Object - Oriented Legacy System Migration Towards SOA},
  author={ Adjoyan, Seza  and  Seriai, Abdelhak Djamel  and  Shatnawi, Anas },
  booktitle={International Conference on Software Engineering \& Knowledge Engineering},
  year={2014},
}

@article{2013Ahe,
  title={A heuristic approach to locate candidate web service in legacy software},
  author={ Abdelkader, Mostefai  and  Malki, Mimoun  and  Benslimane, Sidi Mohamed },
  journal={International Journal of Computer Applications in Technology},
  volume={47},
  number={2/3},
  pages={152-161},
  year={2013},
}

@article{1994Ametr,
  title={A metrics suite for object oriented design},
  author={ Chidamber, S. R  and  Kemerer, C. F },
  journal={Software Engineering IEEE Transactions on},
  volume={20},
  number={6},
  pages={476 - 493},
  year={1994},
}

@article{1996Coupling,
  title={Coupling and Cohesion (Towards a Valid Metrics Suite for Object-Oriented Analysis and Design)},
  author={ Hendersonsellers, Brian  and  Constantine, Larry L  and  Graham, Ian M },
  journal={Object Oriented Systems},
  volume={3},
  number={3},
  pages={143-158},
  year={1996},
}

@inproceedings{1995Measuring,
  title={Measuring coupling and cohesion in object-oriented systems},
  author={ Hitz, M.  and  Montazeri, B. },
  booktitle={Proc. Int. Symposium on Applied Corporate Computing, Oct. 25-27, 1995},
  year={1995},
}

@inproceedings{1995Cohesion,
  title={Cohesion and reuse in an object-oriented system},
  author={ Bieman, James M.  and  Kang, Byung Kyoo },
  booktitle={Proceedings of the 1995 Symposium on Software reusability},
  year={1995},
}

@inproceedings{2021Code,
  title={Code Change Sniffer: Predicting Future Code Changes with Markov Chain},
  author={ Ufuktepe, Ekincan  and  Tuglular, Tugkan },
  booktitle={IEEE Annual Computers, Software, and Applications Conference},
  year={2021},
}


@article{黄沛杰2011代码质量静态度量的研究与应用,
  title={代码质量静态度量的研究与应用},
  author={黄沛杰 and 杨铭铨},
  journal={计算机工程与应用},
  volume={47},
  number={23},
  pages={61-63},
  year={2011},
}

@article{2020Retrieval,
  title={Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks},
  author={ Lewis, Patrick  and  Perez, Ethan  and  Piktus, Aleksandara  and  Petroni, Fabio  and  Kiela, Douwe },
  year={2020},
}


@misc{王海龙0一种基于代码树分析的代码影响范围分析方法,
  title={一种基于代码树分析的代码影响范围分析方法},
  author={王海龙 and 姜华 and 吴晓雯},
}

@INPROCEEDINGS{10430003,
  author={Zheheng, Liang and Jianming, Chang and Wuqiang, Shen and Chaosheng, Yao and Lulu, Wang},
  booktitle={2023 IEEE 23rd International Conference on Software Quality, Reliability, and Security Companion (QRS-C)}, 
  title={ECIA: Elaborate Change Impact Analysis Based on Sub-Statement Level Dependency Graph}, 
  year={2023},
  volume={},
  number={},
  pages={471-480},
  keywords={Software maintenance;Software quality;Software reliability;Security;Flow graphs;Usability;Testing;Software maintenance;Software evolution;Program slicing;Software changes;Change impact analysis},
  doi={10.1109/QRS-C60940.2023.00032}}


@INPROCEEDINGS{10366673,
  author={Zhang, Zaixing and Liu, Liang and Chang, Jianming and Wang, Lulu and Liao, Li},
  booktitle={2023 IEEE 23rd International Conference on Software Quality, Reliability, and Security (QRS)}, 
  title={Commit Classification via Diff-Code GCN based on System Dependency Graph}, 
  year={2023},
  volume={},
  number={},
  pages={476-487},
  keywords={Measurement;Adaptation models;Codes;Software quality;Syntactics;Predictive models;Software reliability;Commit Classification;System Dependency Graph;Program Slicing;Graph Neural Network},
  doi={10.1109/QRS60937.2023.00053}}


@article{DNZS200722064,

 author = {林丽英},

 title = {对象模块耦合度度量模型的初步研究},

 journal = {电脑知识与技术(学术交流)},

 volume = {},

 number = {22},

 pages = {1061-1065},

 year = {2007},

 issn = {1009-3044},

 doi ={}

 }

@article{KRETSOU2021110892,
title = {Change impact analysis: A systematic mapping study},
journal = {Journal of Systems and Software},
volume = {174},
pages = {110892},
year = {2021},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2020.110892},
url = {https://www.sciencedirect.com/science/article/pii/S016412122030282X},
author = {Maria Kretsou and Elvira-Maria Arvanitou and Apostolos Ampatzoglou and Ignatios Deligiannis and Vassilis C. Gerogiannis},
keywords = {Change impact analysis, Change proneness, Instability, Changeability, Amount of change},
abstract = {Change Impact Analysis (CIA) is the process of exploring the tentative effects of a change in other parts of a system. CIA is considered beneficial in practice, since it reduces cost of maintenance and the risk of software development failures. In this paper, we present a systematic mapping study that covers a plethora of CIA methods (by exploring 111 papers), putting special emphasis on how the CIA phenomenon can be quantified: to be efficiently managed. The results of our study suggest that: (a) the practical benefits of CIA cover any type of maintenance request (e.g., feature additions, bug fixing) and can help in reducing relevant cost; (b) CIA quantification relies on four parameters (instability, amount of change, change proneness, and changeability), whose assessment is supported by various metrics and predictors; and (c) in this vast research field, there are still some viewpoints that remain unexplored (e.g., the negative consequences of highly change prone artifacts), whereas others are over-researched (e.g., quantification of instability based on metrics). Based on our results, we provide: (a) useful information for practitioners—i.e., the expected benefits of CIA, and a list of CIA-related metrics, emphasizing on the provision of a detailed interpretation of their relation to CIA; and (b) interesting future research directions—i.e., over- and under-researched sub-fields of CIA.}
}


@article{姜瑛2024基于动态,
  title={基于动态AST与GCN的代码变更影响范围分析},
  author={姜瑛 and 黄培凤 and 顾加伟},
  journal={昆明理工大学学报(自然科学版)},
  number={4},
  year={2024},
}


@phdthesis{daipeng2024software,
    author = {戴鹏},
    title = {软件变更影响分析关键技术研究},
    school = {北京邮电大学},
    year = {2024}
}

@article{ DZBZ202104016,
author = { 于长钺 and  贺宏良 },
title = {面向对象软件变更影响域分析方法},
journal = {信息技术与标准化},
volume = {},
number = {04},
pages = {41-46},
year = {2021},
issn = {1671-539X},
}

@article{2022CIAFP,
  title={CIAFP:A Change Impact Analysis with Fault Prediction for Object-Oriented Software},
  author={ Yadav, Dharmveer Kumar  and  Azad, Chandrashekhar  and  Adhikary, Singh Dibya Ranjan Das },
  journal={International journal of software innovation},
  volume={10},
  number={Pt.3},
  pages={933-951},
  year={2022},
}

@article{2025Change,
  title={Change impact analysis in microservice systems: A systematic literature review},
  author={ Lelovic, Luka  and  Huzinga, Austin  and  Goulis, Gabriel  and  Kaur, Anshpreet  and  Boone, Ricardo  and  Muzrapov, Umidjon  and  Abdelfattah, Amr S.  and  Cerny, Tomas },
  journal={The Journal of Systems \& Software},
  volume={219},
  year={2025},
}

@article{2019Momentum,
  title={Momentum Contrast for Unsupervised Visual Representation Learning},
  author={ He, Kaiming  and  Fan, Haoqi  and  Wu, Yuxin  and  Xie, Saining  and  Girshick, Ross },
  year={2019},
}

@misc{meta2024faiss,
  author = {MetaAI},
  title = {Facebookresearch/faiss},
  year = {2024},
  howpublished = {\url{https://github.com/facebookresearch/faiss}},
  note = {Meta Research, 2024-02-04},
}

@article{2024mGTE,
  title={mGTE: Generalized Long-Context Text Representation and Reranking Models for Multilingual Text Retrieval},
  author={ Zhang, Xin  and  Zhang, Yanzhao  and  Long, Dingkun  and  Xie, Wen  and  Dai, Ziqi  and  Tang, Jialong  and  Lin, Huan  and  Yang, Baosong  and  Xie, Pengjun  and  Huang, Fei },
  year={2024},
}

@misc{hu2025kalmembeddingsuperiortrainingdata,
      title={KaLM-Embedding: Superior Training Data Brings A Stronger Embedding Model}, 
      author={Xinshuo Hu and Zifei Shan and Xinping Zhao and Zetian Sun and Zhenyu Liu and Dongfang Li and Shaolin Ye and Xinyuan Wei and Qian Chen and Baotian Hu and Haofen Wang and Jun Yu and Min Zhang},
      year={2025},
      eprint={2501.01028},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2501.01028}, 
}

@misc{zhang2023retrieveaugmentlargelanguage,
      title={Retrieve Anything To Augment Large Language Models}, 
      author={Peitian Zhang and Shitao Xiao and Zheng Liu and Zhicheng Dou and Jian-Yun Nie},
      year={2023},
      eprint={2310.07554},
      archivePrefix={arXiv},
      primaryClass={cs.IR},
      url={https://arxiv.org/abs/2310.07554}, 
}

@misc{sturua2024jinaembeddingsv3multilingualembeddingstask,
      title={jina-embeddings-v3: Multilingual Embeddings With Task LoRA}, 
      author={Saba Sturua and Isabelle Mohr and Mohammad Kalim Akram and Michael Günther and Bo Wang and Markus Krimmel and Feng Wang and Georgios Mastrapas and Andreas Koukounas and Nan Wang and Han Xiao},
      year={2024},
      eprint={2409.10173},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2409.10173}, 
}

@article{JSGG201123019,

 author = {黄沛杰 and 杨铭铨},

 title = {代码质量静态度量的研究与应用},

 journal = {计算机工程与应用},

 volume = {47},

 number = {23},

 pages = {61-63+107},

 year = {2011},

 issn = {1002-8331},

 doi ={}

 }


@article{feng2020codebert,
  title={Codebert: A pre-trained model for programming and natural languages},
  author={Feng, Zhangyin and Guo, Daya and Tang, Duyu and Duan, Nan and Feng, Xiaocheng and Gong, Ming and Shou, Linjun and Qin, Bing and Liu, Ting and Jiang, Daxin and others},
  journal={arXiv preprint arXiv:2002.08155},
  year={2020}
}

@article{husain_codesearchnet_2019,
    title = {{CodeSearchNet} {Challenge}: {Evaluating} the {State} of {Semantic} {Code} {Search}},
    shorttitle = {{CodeSearchNet} {Challenge}},
    url = {http://arxiv.org/abs/1909.09436},
    urldate = {2020-03-12},
    journal = {arXiv:1909.09436 [cs, stat]},
    author = {Husain, Hamel and Wu, Ho-Hsiang and Gazit, Tiferet and Allamanis, Miltiadis and Brockschmidt, Marc},
    month = sep,
    year = {2019},
    note = {arXiv: 1909.09436},
}


@article{paszke2019pytorch,
  title={Pytorch: An imperative style, high-performance deep learning library},
  author={Paszke, Adam and Gross, Sam and Massa, Francisco and Lerer, Adam and Bradbury, James and Chanan, Gregory and Killeen, Trevor and Lin, Zeming and Gimelshein, Natalia and Antiga, Luca and others},
  journal={Advances in neural information processing systems},
  volume={32},
  year={2019}
}

@inproceedings{wolf2020transformers,
  title={Transformers: State-of-the-art natural language processing},
  author={Wolf, Thomas and Debut, Lysandre and Sanh, Victor and Chaumond, Julien and Delangue, Clement and Moi, Anthony and Cistac, Pierric and Rault, Tim and Louf, R{\'e}mi and Funtowicz, Morgan and others},
  booktitle={Proceedings of the 2020 conference on empirical methods in natural language processing: system demonstrations},
  pages={38--45},
  year={2020}
}

@article{muennighoff2022mteb,
  doi = {10.48550/ARXIV.2210.07316},
  url = {https://arxiv.org/abs/2210.07316},
  author = {Muennighoff, Niklas and Tazi, Nouamane and Magne, Lo{\"\i}c and Reimers, Nils},
  title = {MTEB: Massive Text Embedding Benchmark},
  publisher = {arXiv},
  journal={arXiv preprint arXiv:2210.07316},  
  year = {2022}
}

@inproceedings{he2020momentum,
  title={Momentum contrast for unsupervised visual representation learning},
  author={He, Kaiming and Fan, Haoqi and Wu, Yuxin and Xie, Saining and Girshick, Ross},
  booktitle={Proceedings of the IEEE/CVF conference on computer vision and pattern recognition},
  pages={9729--9738},
  year={2020}
}
@article{kingma2014adam,
  title={Adam: A method for stochastic optimization},
  author={Kingma, Diederik P},
  journal={arXiv preprint arXiv:1412.6980},
  year={2014}
}

@article{hui2024qwen2coder,
  title={Qwen2. 5-coder technical report},
  author={Hui, Binyuan and Yang, Jian and Cui, Zeyu and Yang, Jiaxi and Liu, Dayiheng and Zhang, Lei and Liu, Tianyu and Zhang, Jiajun and Yu, Bowen and Lu, Keming and others},
  journal={arXiv preprint arXiv:2409.12186},
  year={2024}
}

@article{yang2024qwen2,
  title={Qwen2. 5 technical report},
  author={Yang, An and Yang, Baosong and Zhang, Beichen and Hui, Binyuan and Zheng, Bo and Yu, Bowen and Li, Chengyuan and Liu, Dayiheng and Huang, Fei and Wei, Haoran and others},
  journal={arXiv preprint arXiv:2412.15115},
  year={2024}
}

@article{dubey2024llama,
  title={The llama 3 herd of models},
  author={Dubey, Abhimanyu and Jauhri, Abhinav and Pandey, Abhinav and Kadian, Abhishek and Al-Dahle, Ahmad and Letman, Aiesha and Mathur, Akhil and Schelten, Alan and Yang, Amy and Fan, Angela and others},
  journal={arXiv preprint arXiv:2407.21783},
  year={2024}
}

@article{hurst2024gpt4o,
  title={Gpt-4o system card},
  author={Hurst, Aaron and Lerer, Adam and Goucher, Adam P and Perelman, Adam and Ramesh, Aditya and Clark, Aidan and Ostrow, AJ and Welihinda, Akila and Hayes, Alan and Radford, Alec and others},
  journal={arXiv preprint arXiv:2410.21276},
  year={2024}
}

@inproceedings{1996Impact,
  title={Impact analysis in the software change process: a year 2000 perspective},
  author={ Bohner, S. A. },
  booktitle={International Conference on Software Maintenance},
  year={1996},
}