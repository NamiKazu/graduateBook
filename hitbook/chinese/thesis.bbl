\begin{thebibliography}{49}
\providecommand{\natexlab}[1]{#1}
\providecommand{\url}[1]{#1}
\expandafter\ifx\csname urlstyle\endcsname\relax\else
  \urlstyle{same}\fi
\expandafter\ifx\csname href\endcsname\relax
  \DeclareUrlCommand\doi{\urlstyle{rm}}
  \def\eprint#1#2{#2}
\else
  \def\doi#1{\href{https://doi.org/#1}{\nolinkurl{#1}}}
  \let\eprint\href
\fi

\bibitem[Kumar et~al.(2012)Kumar and Gill]{2012Maintenance}
KUMAR A, GILL B~S.
\newblock Maintenance vs. reengineering software systems\allowbreak[J].
\newblock Global Journal of Computer Science & Technology, 2012.

\bibitem[Pahl et~al.(2016)Pahl and Jamshidi]{2016Microservices}
PAHL C, JAMSHIDI P.
\newblock Microservices: A systematic mapping study\allowbreak[J].
\newblock SCITEPRESS - Science and Technology Publications, Lda, 2016.

\bibitem[Dai et~al.(2022)Dai, Wang, Jin, Gong, and Yang]{2022An}
DAI P, WANG Y, JIN D, et~al.
\newblock An improving approach to analyzing change impact of c
  programs\allowbreak[J].
\newblock Computer communications, 2022\allowbreak (Jan.): 182.

\bibitem[Nuñez-Varela et~al.(2017)Nuñez-Varela, Pérez-Gonzalez,
  Martínez-Perez, and Soubervielle-Montalvo]{NUNEZVARELA2017164}
NUñEZ-VARELA A~S, PéREZ-GONZALEZ H~G, MARTíNEZ-PEREZ F~E, et~al.
\newblock Source code metrics: A systematic mapping study\allowbreak[J/OL].
\newblock Journal of Systems and Software, 2017, 128: 164-197.
\newblock
  \url{https://www.sciencedirect.com/science/article/pii/S0164121217300663}.
\newblock DOI: \doi{https://doi.org/10.1016/j.jss.2017.03.044}.

\bibitem[Sheneamer et~al.(2018)Sheneamer, Abdullah, Roy, Swarup, Kalita, and
  Jugal]{Sheneamer2018A}
SHENEAMER, ABDULLAH, ROY, et~al.
\newblock A detection framework for semantic code clones and obfuscated
  code\allowbreak[J].
\newblock Expert Systems with Application, 2018.

\bibitem[Li et~al.(2014)Li, Kwon, Kwon, and Lee]{2014A}
LI H, KWON H, KWON J, et~al.
\newblock A scalable approach for vulnerability discovery based on security
  patches\allowbreak[C]//\allowbreak
International Conference on Applications & Techniques in Information Security.
\newblock 2014.

\bibitem[Shahriar et~al.(2012)Shahriar and Zulkernine]{2012Mitigating}
SHAHRIAR H, ZULKERNINE M.
\newblock Mitigating program security vulnerabilities: Approaches and
  challenges\allowbreak[J].
\newblock ACM Computing Surveys, 2012, 44\allowbreak (3): 1-46.

\bibitem[Baset et~al.(2017)Baset and Denning]{2017IDE}
BASET A~Z, DENNING T.
\newblock Ide plugins for detecting input-validation
  vulnerabilities\allowbreak[J].
\newblock IEEE, 2017.

\bibitem[Baloglu(2016)]{2016How}
BALOGLU B.
\newblock How to find and fix software vulnerabilities with coverity static
  analysis\allowbreak[C]//\allowbreak
Cybersecurity Development.
\newblock 2016.

\bibitem[Spanos et~al.(2017)Spanos, Angelis, and Toloudis]{2017Assessment}
SPANOS G, ANGELIS L, TOLOUDIS D.
\newblock Assessment of vulnerability severity using text mining\allowbreak[J].
\newblock ACM, 2017: 1-6.

\bibitem[Spanos et~al.(2018)Spanos and Angelis]{2018A}
SPANOS G, ANGELIS L.
\newblock A multi-target approach to estimate software vulnerability
  characteristics and severity scores\allowbreak[J].
\newblock Journal of Systems and Software, 2018, 146\allowbreak (DEC.):
  152-166.

\bibitem[Kudjo et~al.(2020)Kudjo, Chen, Mensah, Amankwah, and Kudjo]{2020The}
KUDJO P~K, CHEN J, MENSAH S, et~al.
\newblock The effect of bellwether analysis on software vulnerability severity
  prediction models\allowbreak[J].
\newblock Software Quality Journal, 2020, 28\allowbreak (1): 1-34.

\bibitem[Qu et~al.(2015)Qu, Guan, Zheng, Liu, Wang, Hou, and
  Yang]{2015Exploring}
QU Y, GUAN X, ZHENG Q, et~al.
\newblock Exploring community structure of software call graph and its
  applications in class cohesion measurement\allowbreak[J].
\newblock Journal of Systems & Software, 2015, 108\allowbreak (oct.): 193-210.

\bibitem[Nakamura et~al.(2012)Nakamura and Hamagami]{2012A}
NAKAMURA M, HAMAGAMI T.
\newblock A software quality evaluation method using the change of source code
  metrics\allowbreak[J].
\newblock IEEE, 2012.

\bibitem[Misra et~al.(2012)Misra, Akman, and Colomo-Palacios]{2012Framework}
MISRA S, AKMAN I, COLOMO-PALACIOS R.
\newblock Framework for evaluation and validation of software complexity
  measures\allowbreak[J].
\newblock Iet Software, 2012, 6\allowbreak (4): 323-334.

\bibitem[Misra et~al.(2012)Misra, Koyuncu, Crasso, Mateos, and
  Zunino]{2012Asuite}
MISRA S, KOYUNCU M, CRASSO M, et~al.
\newblock A suite of cognitive complexity metrics\allowbreak[C]//\allowbreak
International Conference on Computational Science & Its Applications.
\newblock 2012.

\bibitem[Concas et~al.(2010)Concas, Marchesi, Murgia, Pinna, and
  Tonelli]{2010Assessing}
CONCAS G, MARCHESI M, MURGIA A, et~al.
\newblock Assessing traditional and new metrics for object-oriented
  systems\allowbreak[J].
\newblock ACM, 2010.

\bibitem[陈振强\ 等(2003)陈振强 and 徐宝文]{陈振强2003}
陈振强, 徐宝文.
\newblock 一种基于依赖性分析的类内聚度度量方法\allowbreak[J].
\newblock 软件学报, 2003, 14\allowbreak (11): 8.

\bibitem[Briand et~al.(1997)Briand, Morasca, and Basili]{1997Property}
BRIAND L~C, MORASCA S, BASILI V~R.
\newblock Property-based software engineering measurement\allowbreak[J].
\newblock IEEE Press, 1997.

\bibitem[Qu et~al.(2015)Qu, Guan, Zheng, Liu, Wang, Hou, and Yang]{QU2015193}
QU Y, GUAN X, ZHENG Q, et~al.
\newblock Exploring community structure of software call graph and its
  applications in class cohesion measurement\allowbreak[J/OL].
\newblock Journal of Systems and Software, 2015, 108: 193-210.
\newblock
  \url{https://www.sciencedirect.com/science/article/pii/S0164121215001259}.
\newblock DOI: \doi{https://doi.org/10.1016/j.jss.2015.06.015}.

\bibitem[马健\ 等(2018)马健, 刘峰, and 樊建平]{马健2018}
马健, 刘峰, 樊建平.
\newblock 面向对象软件耦合度量方法\allowbreak[J].
\newblock 北京邮电大学学报, 2018, 41\allowbreak (1): 6.

\bibitem[Ardito et~al.(2020)Ardito, Coppola, Barbato, and Verga]{Ardito2020}
ARDITO L, COPPOLA R, BARBATO L, et~al.
\newblock A tool-based perspective on software code maintainability metrics: A
  systematic literature review\allowbreak[J].
\newblock Scientific Programming, 2020\allowbreak (8840389).

\bibitem[Li et~al.(1993)Li and Henry]{1993Object}
LI W, HENRY S.
\newblock Object-oriented metrics that predict maintainability\allowbreak[J].
\newblock Journal of Systems & Software, 1993, 23\allowbreak (2): 111-122.

\bibitem[Chen et~al.(2013)Chen, Iqbal, Abdrakhmanov, Parlar, and
  Wassyng]{2013Large}
CHEN W, IQBAL A, ABDRAKHMANOV A, et~al.
\newblock Large-scale enterprise systems: Changes and impacts\allowbreak[J].
\newblock lecture notes in business information processing, 2013.

\bibitem[Arnold(1996)]{Arnold1996}
ARNOLD R~S.
\newblock Software change impact analysis\allowbreak[M].
\newblock Washington, DC, USA: IEEE Computer Society Press, 1996.

\bibitem[Zhang et~al.(2004)Zhang, Gupta, and Zhang]{2004Efficient}
ZHANG X, GUPTA R, ZHANG Y.
\newblock Efficient forward computation of dynamic slices using reduced ordered
  binary decision diagrams\allowbreak[C]//\allowbreak
Software Engineering, 2004. ICSE 2004. Proceedings.
\newblock 2004.

\bibitem[Gallagher et~al.(1991)Gallagher and Lyle]{1991Using}
GALLAGHER K~B, LYLE J~R.
\newblock Using program slicing in software maintenance\allowbreak[J].
\newblock IEEE Transactions on Software Engineering, 1991, 17\allowbreak (8):
  751-761.

\bibitem[JitenderKumarChhabra et~al.(2018)JitenderKumarChhabra,
  MrinaalMalhotra, JitenderKumarChhabra, MrinaalMalhotra, JitenderKumarChhabra,
  MrinaalMalhotra, JitenderKumarChhabra, MrinaalMalhotra, JitenderKumarChhabra,
  and MrinaalMalhotra]{JitenderKumarChhabra2018Improved}
JITENDERKUMARCHHABRA, MRINAALMALHOTRA, JITENDERKUMARCHHABRA, et~al.
\newblock Improved computation of change impact analysis in software using all
  applicable dependencies\allowbreak[J].
\newblock Springer, Singapore, 2018.

\bibitem[Gethers et~al.(2011)Gethers, Kagdi, Dit, and Poshyvanyk]{2011An}
GETHERS M, KAGDI H, DIT B, et~al.
\newblock An adaptive approach to impact analysis from change requests to
  source code\allowbreak[C]//\allowbreak
IEEE/ACM International Conference on Automated Software Engineering.
\newblock 2011.

\bibitem[Sun et~al.(2013)Sun, Li, Wen, and Zhang]{2013Analyzing}
SUN X, LI B, WEN W, et~al.
\newblock Analyzing impact rules of different change types to support change
  impact analysis\allowbreak[J].
\newblock International Journal of Software Engineering & Knowledge
  Engineering, 2013, 23\allowbreak (03): 259-288.

\bibitem[Department et~al.(2013)Department, of, Software, Engineering,
  University, of, Szeged, Szeged, and Hungary]{Department2013Impact}
DEPARTMENT, OF, SOFTWARE, et~al.
\newblock Impact analysis in the presence of dependence clusters using static
  execute after in webkit\allowbreak[J].
\newblock Journal of Software: Evolution and Process, 2013, 26\allowbreak (6):
  569-588.

\bibitem[Sun et~al.(2010)Sun, Li, Tao, Wen, and Zhang]{5676283}
SUN X, LI B, TAO C, et~al.
\newblock Change impact analysis based on a taxonomy of change
  types\allowbreak[C/OL]//\allowbreak
2010 IEEE 34th Annual Computer Software and Applications Conference.
\newblock 2010: 373-382.
\newblock DOI: \doi{10.1109/COMPSAC.2010.45}.

\bibitem[Shakirat et~al.(2021)Shakirat, Bajeh, Aro, Adewole, and
  Mathematical]{2021Improving}
SHAKIRAT Y, BAJEH A, ARO T~O, et~al.
\newblock Improving the accuracy of static source code based software change
  impact analysis through hybrid techniques: A review\allowbreak[J].
\newblock Universiti Malaysia Pahang Publishing, 2021\allowbreak (1).

\bibitem[Huang et~al.(2007)Huang and Song]{2007Precise}
HUANG L, SONG Y~T.
\newblock Precise dynamic impact analysis with dependency analysis for
  object-oriented programs\allowbreak[C]//\allowbreak
Acis International Conference on Software Engineering Research.
\newblock 2007.

\bibitem[Cai et~al.(2015)Cai and Santelices]{2015Acom}
CAI H, SANTELICES R.
\newblock A comprehensive study of the predictive accuracy of dynamic
  change-impact analysis\allowbreak[J].
\newblock Journal of Systems and Software, 2015, 103: 248-265.

\bibitem[Cai et~al.(2014)Cai, Santelices, and Xu]{2014Estimating}
CAI H, SANTELICES R, XU T.
\newblock Estimating the accuracy of dynamic change-impact analysis using
  sensitivity analysis\allowbreak[C]//\allowbreak
Eighth International Conference on Software Security & Reliability.
\newblock 2014.

\bibitem[Cai et~al.(2016)Cai and Thain]{2016DistIA}
CAI H, THAIN D.
\newblock Distia: a cost-effective dynamic impact analysis for distributed
  programs\allowbreak[C]//\allowbreak
the 31st IEEE/ACM International Conference.
\newblock 2016.

\bibitem[Markus et~al.(2017)Markus, Borg, Krzysztof, Wnuk, Björn, Regnell,
  Per, and Runeson]{Markus2017Supporting}
MARKUS, BORG, KRZYSZTOF, et~al.
\newblock Supporting change impact analysis using a recommendation system: An
  industrial case study in a safety-critical context\allowbreak[J].
\newblock IEEE Transactions on Software Engineering, 2017.

\bibitem[Hattori et~al.(2008)Hattori, Jr, Cardoso, and Sampaio]{2008Mining}
HATTORI L, JR G~P~D~S, CARDOSO F, et~al.
\newblock Mining software repositories for software change impact analysis: a
  case study\allowbreak[C]//\allowbreak
Brazilian Symposium on Databases.
\newblock 2008.

\bibitem[Zanjani et~al.(2014)Zanjani, Swartzendruber, and Kagdi]{2014Impact}
ZANJANI M~B, SWARTZENDRUBER G, KAGDI H.
\newblock Impact analysis of change requests on source code based on
  interaction and commit histories\allowbreak[C]//\allowbreak
ACM.
\newblock 2014.

\bibitem[Rolfsnes et~al.(2016)Rolfsnes, Alesio, Behjati, Moonen, and
  Binkley]{2016Generalizing}
ROLFSNES T, ALESIO S~D, BEHJATI R, et~al.
\newblock Generalizing the analysis of evolutionary coupling for software
  change impact analysis\allowbreak[C]//\allowbreak
IEEE International Conference on Software Analysis.
\newblock 2016.

\bibitem[Dit et~al.(2014)Dit, Wagner, Wen, Wang, Linares-Vásquez, Poshyvanyk,
  and Kagdi]{2014ImpactMiner}
DIT B, WAGNER M, WEN S, et~al.
\newblock Impactminer: a tool for change impact analysis\allowbreak[J].
\newblock ACM, 2014: 540-543.

\bibitem[Huang et~al.(2021)Huang, Jiang, Luo, Chen, and Huang]{2021Change}
HUANG Y, JIANG J, LUO X, et~al.
\newblock Change-patterns mapping: A boosting way for change impact
  analysis\allowbreak[J].
\newblock IEEE Transactions on Software Engineering, 2021, PP\allowbreak (99):
  1-1.

\bibitem[Lattner et~al.(2020)Lattner, Amini, Bondhugula, Cohen, Davis, Pienaar,
  Riddle, Shpeisman, Vasilache, and Zinenko]{2020MLIR}
LATTNER C, AMINI M, BONDHUGULA U, et~al.
\newblock Mlir: A compiler infrastructure for the end of moore's
  law\allowbreak[Z].
\newblock 2020.

\bibitem[迟曲(2011)]{迟曲2011关于软件设计的模块独立性分析}
迟曲.
\newblock 关于软件设计的模块独立性分析\allowbreak[J].
\newblock 数字技术与应用, 2011\allowbreak (3): 2.

\bibitem[Gomariz et~al.(2013)Gomariz, Campos, Marin, and Goethals]{2013ClaSP}
GOMARIZ A, CAMPOS M, MARIN R, et~al.
\newblock Clasp: An efficient algorithm for mining frequent closed
  sequences\allowbreak[Z].
\newblock 2013.

\bibitem[花子涵\ 等(2024)花子涵, 杨立, 陆俊逸, and
  左春]{花子涵2024代码审查自动化研究综述}
花子涵, 杨立, 陆俊逸, 等.
\newblock 代码审查自动化研究综述\allowbreak[J].
\newblock 软件学报, 2024, 35\allowbreak (7): 3265-3290.

\bibitem[Mazlami et~al.(2017)Mazlami, Cito, and Leitner]{2017Extraction}
MAZLAMI G, CITO J, LEITNER P.
\newblock Extraction of microservices from monolithic software
  architectures\allowbreak[J].
\newblock IEEE, 2017.

\bibitem[Wan et~al.(2023)Wan, Cheng, Mao, Liu, Song, Li, and
  Kurohashi]{wan-etal-2023-gpt}
WAN Z, CHENG F, MAO Z, et~al.
\newblock {GPT}-{RE}: In-context learning for relation extraction using large
  language models\allowbreak[C/OL]//\allowbreak
BOUAMOR H, PINO J, BALI K.
\newblock Proceedings of the 2023 Conference on Empirical Methods in Natural
  Language Processing.
\newblock Singapore: Association for Computational Linguistics, 2023:
  3534-3547.
\newblock \url{https://aclanthology.org/2023.emnlp-main.214}.
\newblock DOI: \doi{10.18653/v1/2023.emnlp-main.214}.

\end{thebibliography}
